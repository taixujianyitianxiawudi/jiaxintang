{"version":3,"sources":["cache.ts","components/loading.tsx","pages/signup.tsx","pages/login.tsx","components/logout.tsx","pages/develop.tsx","components/errors.tsx","pages/profile.tsx","components/createchat.tsx","components/avatar.tsx","components/privatechathistory.tsx","components/publicchathistory.tsx","components/chathistory.tsx","pages/chatroom.tsx","components/deleteroom.tsx","components/roomlist.tsx","components/privateroom.tsx","components/userlist.tsx","components/createroom.tsx","pages/routes.tsx","pages/welcome.tsx","pages/main.tsx","localauth.tsx","index.tsx"],"names":["cache","InMemoryCache","typePolicies","Query","fields","isLoggedIn","read","isLoggedInVar","UserOrRoom","UserOrRoomVar","makeVar","localStorage","getItem","Loading","SIGN_UP","gql","Signup","useMutation","onCompleted","signup","user","setItem","token","id","loading","error","useState","name","setName","email","setEmail","password","setPassword","className","src","alt","action","method","type","defaultValue","htmlFor","autoComplete","required","placeholder","onChange","e","target","value","to","onClick","variables","catch","LOGIN_USER","Login","login","path","exact","Logout","client","useApolloClient","evict","fieldName","gc","removeItem","window","location","href","Develop","Errors","MY_PROFILE","Profile","useQuery","data","undefined","me","CREATE_CHAT","JOIN_ROOM","LEFT_ROOM","CreateChat","roomId","userId","chat","setChat","chatRef","useRef","createChat","leftRoom","joinRoom","oldRoomId","parseInt","incrementRoomUserId","createChatPrivateData","content","decrementRoomUserId","onKeyDown","key","shiftKey","current","preventDefault","touserId","ref","Avatar","createdAt","image","color","img","CHAT_PRIVATE","atBottom","element","top","scrollTop","height","clientHeight","scrollHeight","PrivateChatHistory","myuserId","pollInterval","histRef","setIsAtBottom","computeBot","useEffect","onScroll","chatPrivate","map","author","CHAT_BY_ROOM_ID","PublicChatHistory","chatByRoomIdId","chatByRoomId","ChatHistory","ChatRoom","_userId","useParams","DELETE_ROOM","DeleteRoom","deleteRoom","deleteRoomId","then","ROOM_LIST","RoomList","allRooms","room","i","owner","details","currentNumberofUsers","USER_PRIVATE_ROOM","PrivateRoom","userPrivateRoomId","userPrivateRoom","USER_LIST","UserList","allUsers","isOnline","CREATE_ROOM","CreateRoom","createRoom","setDetails","nameRef","detailsRef","createRoomData","public","USER_OR_ROOM","Routes","navigation","Welcome","fill","viewBox","preserveAspectRatio","aria-hidden","points","open","aria-label","Button","item","show","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Panel","focus","static","Main","typeDefs","IS_LOGGED_IN","IsLoggedIn","httpLink","HttpLink","uri","headers","authorization","wsLink","WebSocketLink","options","reconnect","connectionParams","splitLink","split","query","definition","getMainDefinition","kind","operation","ApolloClient","link","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.0843399b.chunk.js","sourcesContent":["import { InMemoryCache, makeVar } from \"@apollo/client\";\r\n\r\nexport const cache: InMemoryCache = new InMemoryCache({\r\n  typePolicies: {\r\n    Query: {\r\n      fields: {\r\n        isLoggedIn: {\r\n          read() {\r\n            return isLoggedInVar();\r\n          },\r\n        },\r\n        UserOrRoom: {\r\n          read() {\r\n            return UserOrRoomVar()\r\n          }\r\n        }\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport const isLoggedInVar = makeVar<boolean>(!!localStorage.getItem(\"token\"));\r\nexport const UserOrRoomVar = makeVar<boolean>(localStorage.getItem(\"place\")===\"true\");\r\n","const Loading: React.FC = () => {\r\n  return (\r\n    <div>Loading, please wait</div>\r\n  );\r\n};\r\n\r\nexport default Loading;","import { gql, useMutation } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isLoggedInVar } from \"../cache\";\r\nimport Loading from \"../components/loading\";\r\nimport * as SignUpTypes from \"./__generated__/SignUp\"\r\nexport const SIGN_UP = gql`\r\n  mutation SignUp($name: String $email: String! $password: String!) {\r\n    signup(name: $name email: $email password:$password) {\r\n      user {\r\n        id\r\n        email\r\n        name\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst Signup: React.FC = () => {\r\n  const [signup, { loading, error }] = useMutation<\r\n  SignUpTypes.SignUp,\r\n  SignUpTypes.SignUpVariables\r\n  >(SIGN_UP,{\r\n    onCompleted({ signup }) {\r\n      if (signup && signup.user) {\r\n        localStorage.setItem('token', signup.token as string);\r\n        localStorage.setItem('userId', signup.user.id as unknown as string);\r\n        isLoggedInVar(true);\r\n      }\r\n    }\r\n  });\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  if (loading) return (\r\n    <Loading />\r\n  );\r\n  if (error) return (\r\n    <div>asdfsadf</div>\r\n  );\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n    <div className=\"max-w-md w-full space-y-8\">\r\n      <div>\r\n        <img\r\n          className=\"mx-auto h-12 w-auto\"\r\n          src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n          alt=\"Workflow\"\r\n        />\r\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n      </div>\r\n      <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\r\n        <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n        <div className=\"rounded-md shadow-sm -space-y-px\">\r\n          <div>\r\n            <label htmlFor=\"name\" className=\"sr-only\">\r\n              Your name\r\n            </label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"name\"\r\n              autoComplete=\"name\"\r\n              required\r\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n              placeholder=\"name\"\r\n              onChange={e=>setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email-address\" className=\"sr-only\">\r\n              Email address\r\n            </label>\r\n            <input\r\n              id=\"email-address\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              autoComplete=\"email\"\r\n              required\r\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n              placeholder=\"Email address\"\r\n              onChange={e=>setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\" className=\"sr-only\">\r\n              Password\r\n            </label>\r\n            <input\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              autoComplete=\"current-password\"\r\n              required\r\n              className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n              placeholder=\"Password\"\r\n              onChange={e=>setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"remember_me\"\r\n              name=\"remember_me\"\r\n              type=\"checkbox\"\r\n              className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n            />\r\n            <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n              Remember me\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"text-sm\">\r\n            <Link to=\"/\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n             Click here to login\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n            onClick={()=>signup({variables: {name, email, password}})\r\n            .catch(e=>{return(\"fuck\")})\r\n          }>\r\n            Sign in\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  );\r\n};\r\nexport default Signup;","import { gql, useMutation } from \"@apollo/client\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport { isLoggedInVar } from \"../cache\";\r\nimport Loading from \"../components/loading\";\r\nimport Signup from \"./signup\";\r\nimport * as LoginTypes from './__generated__/Login'\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation Login($email: String! $password: String!) {\r\n    login(email: $email password:$password) {\r\n      user {\r\n        id\r\n      }\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst Login: React.FC = () => {\r\n  const [login, { loading, error }] = useMutation<\r\n  LoginTypes.Login,\r\n  LoginTypes.LoginVariables\r\n  >(LOGIN_USER, {\r\n    onCompleted({ login }) {\r\n      if (login && login.user) {\r\n        localStorage.setItem('token', login.token as string);\r\n        localStorage.setItem('userId', login.user.id as unknown as string);\r\n        isLoggedInVar(true);\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  if (loading) return (\r\n    <Loading />\r\n  );\r\n  if (error) return (\r\n    <div>asdfsadf</div>\r\n  );\r\n\r\n  return (\r\n    <BrowserRouter>\r\n\r\n     <Switch>\r\n      <Route path=\"/signup\">\r\n        <Signup />\r\n      </Route>\r\n      <Route exact path=\"/\">\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n      <div className=\"max-w-md w-full space-y-8\">\r\n        <div>\r\n          <img\r\n            className=\"mx-auto h-12 w-auto\"\r\n            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n            alt=\"Workflow\"\r\n          />\r\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\r\n        </div>\r\n        <form className=\"mt-8 space-y-6\" action=\"#\" method=\"POST\">\r\n          <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\r\n          <div className=\"rounded-md shadow-sm -space-y-px\">\r\n            <div>\r\n              <label htmlFor=\"email-address\" className=\"sr-only\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email-address\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Email address\"\r\n                onChange={e=>setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"sr-only\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                autoComplete=\"current-password\"\r\n                required\r\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\r\n                placeholder=\"Password\"\r\n                onChange={e=>setPassword(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center\">\r\n              <input\r\n                id=\"remember_me\"\r\n                name=\"remember_me\"\r\n                type=\"checkbox\"\r\n                className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\r\n              />\r\n              <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                Remember me\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"text-sm\">\r\n              <Link to=\"/signup\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n               Click here to signup\r\n              </Link>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n              onClick={()=>login({variables: {email, password}})\r\n              .catch(e=>{return(\"fuck\")})\r\n            }>\r\n              Sign in\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n      </Route>\r\n     </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default Login;","import { useApolloClient } from '@apollo/client';\r\nimport { isLoggedInVar } from '../cache';\r\n\r\nconst Logout = () => {\r\n  const client = useApolloClient();\r\n  return (\r\n    <button \r\n    className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-pink-400\"\r\n    onClick={() => {\r\n      client.cache.evict({ fieldName: 'me' });\r\n      client.cache.gc();\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('userId');\r\n      isLoggedInVar(false);\r\n      window.location.href=\"/\"\r\n    }}>\r\n      log out!\r\n    </button>\r\n  )\r\n}\r\nexport default Logout;","const Develop:React.FC = () => {\r\n  return (\r\n    <div className=\"grid gap-4 grid-cols-3\">\r\n        <div>1</div>\r\n        <div>2</div>\r\n        <div>3</div>\r\n        <div>4</div>\r\n        <div>5 </div>\r\n        <div>6 </div>\r\n        <div>7 </div>\r\n        <div>8 </div>\r\n        <div>9 </div>\r\n        <div>9 </div>\r\n    </div>\r\n  )\r\n};\r\nexport default Develop;","const Errors: React.FC = () => {\r\n  return (\r\n    <div>Something went wrong!</div>\r\n  );\r\n};\r\n\r\nexport default Errors;","import { gql, useQuery } from \"@apollo/client\"\r\nimport Logout from \"../components/logout\"\r\nimport Loading from \"../components/loading\"\r\nimport Error from \"../components/errors\"\r\nimport * as MyProfileTypes from \"./__generated__/MyProfile\"\r\nexport const MY_PROFILE = gql`\r\n  query MyProfile {\r\n    me {\r\n      id\r\n      name\r\n      email\r\n    }\r\n  }\r\n`\r\nconst Profile: React.FC = () => {\r\n  const { data, loading, error } = useQuery<MyProfileTypes.MyProfile>(MY_PROFILE);\r\n  if (loading) return <Loading />\r\n  if (error || data === undefined) return <Error />\r\n  if (data.me) {\r\n    return (\r\n      <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\r\n      <div className=\"px-4 py-5 sm:px-6\">\r\n        <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Profiles</h3>\r\n        <p className=\"mt-1 max-w-2xl text-sm text-gray-500\">Personal details and application.</p>\r\n      </div>\r\n      <div className=\"border-t border-gray-200\">\r\n        <dl>\r\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">Id</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{data.me.id}</dd>\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">Full name</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{data.me.name}</dd>\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">Email address</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{data.me.email}</dd>\r\n          </div>\r\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">Salary expectation</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">$120,000</dd>\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">About</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n              Fugiat ipsum ipsum deserunt culpa aute sint do nostrud anim incididunt cillum culpa consequat. Excepteur\r\n              qui ipsum aliquip consequat sint. Sit id mollit nulla mollit nostrud in ea officia proident. Irure nostrud\r\n              pariatur mollit ad adipisicing reprehenderit deserunt qui eu.\r\n            </dd>\r\n          </div>\r\n          <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\r\n            <dt className=\"text-sm font-medium text-gray-500\">Attachments</dt>\r\n            <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\r\n              <ul className=\"border border-gray-200 rounded-md divide-y divide-gray-200\">\r\n                <li className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\">\r\n                  <div className=\"w-0 flex-1 flex items-center\">\r\n                    <span className=\"ml-2 flex-1 w-0 truncate\">resume_back_end_developer.pdf</span>\r\n                  </div>\r\n                  <div className=\"ml-4 flex-shrink-0\">\r\n                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                      Download\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n                <li className=\"pl-3 pr-4 py-3 flex items-center justify-between text-sm\">\r\n                  <div className=\"w-0 flex-1 flex items-center\">\r\n                    \r\n                    <span className=\"ml-2 flex-1 w-0 truncate\">coverletter_back_end_developer.pdf</span>\r\n                  </div>\r\n                  <div className=\"ml-4 flex-shrink-0\">\r\n                    <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                      Download\r\n                    </a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </dd>\r\n          </div>\r\n        </dl>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n  return <Error />;\r\n}\r\n  \r\nexport default Profile;","import { gql, useMutation } from \"@apollo/client\";\r\nimport { useRef, useState } from \"react\";\r\nimport ChatUtils from \"./chatutils/chatutils\";\r\nimport * as JoinRoombTypes from './__generated__/JoinRoomb'\r\nimport * as LeftRoombTypes from './__generated__/LeftRoomb'\r\nimport * as CreateChatPrivateTypes from './__generated__/CreateChatPrivateMutation'\r\nconst CREATE_CHAT = gql`\r\nmutation CreateChatPrivateMutation($createChatPrivateData: CreateChatInputPrivate!) {\r\n  createChatPrivate(data: $createChatPrivateData) {\r\n    id\r\n    content\r\n  }\r\n}\r\n`\r\ninterface InputMessageProps {\r\n  roomId: number;\r\n  userId?: number;\r\n}\r\n\r\nconst JOIN_ROOM = gql`\r\nmutation JoinRoomb($incrementRoomUserId: Int!) {\r\n  incrementRoomUser(id: $incrementRoomUserId) {\r\n    id\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nconst LEFT_ROOM = gql`\r\nmutation LeftRoomb($decrementRoomUserId: Int!) {\r\n  decrementRoomUser(id: $decrementRoomUserId) {\r\n    id\r\n    name\r\n  }\r\n}\r\n`;\r\n\r\nconst CreateChat: React.FC<InputMessageProps> = ({ roomId, userId}) => {\r\n\r\n  const [chat, setChat] = useState(\"\");\r\n  const chatRef = useRef<HTMLInputElement>(null);\r\n  const [createChat] =\r\n    useMutation<\r\n    CreateChatPrivateTypes.CreateChatPrivateMutation,\r\n    CreateChatPrivateTypes.CreateChatPrivateMutationVariables\r\n    >(CREATE_CHAT);\r\n\r\n    const [ leftRoom ] = useMutation<\r\n    LeftRoombTypes.LeftRoomb,\r\n    LeftRoombTypes.LeftRoombVariables\r\n    >(LEFT_ROOM);\r\n  \r\n    const [ joinRoom ] = useMutation<\r\n    JoinRoombTypes.JoinRoomb,\r\n    JoinRoombTypes.JoinRoombVariables\r\n    >(JOIN_ROOM);\r\n\r\n    let oldRoomId = parseInt(localStorage.getItem(\"roomId\") as string)\r\n    if (localStorage.getItem(\"roomId\") === null) {\r\n      joinRoom({variables:{incrementRoomUserId: roomId}})\r\n      localStorage.setItem(\"roomId\", roomId as unknown as string)\r\n      createChat({\r\n        variables: {\r\n          createChatPrivateData: {\r\n            roomId: roomId,\r\n            content: \"enter the room\",\r\n          }\r\n        },\r\n      });\r\n    } else if (oldRoomId !== roomId) {\r\n      joinRoom({variables:{incrementRoomUserId: roomId}}).catch();\r\n      leftRoom({variables:{decrementRoomUserId: oldRoomId}}).catch();\r\n\r\n      if (userId === 999999) {\r\n        createChat({  \r\n          variables: {\r\n            createChatPrivateData: {\r\n              roomId: roomId,\r\n              content: \"enter the room\",\r\n            }\r\n          },\r\n        });\r\n      }\r\n      localStorage.setItem(\"roomId\", roomId as unknown as string);\r\n\r\n    }\r\n    if (userId === 999999) userId = undefined\r\n  return (\r\n    <div>\r\n      {(false)?<ChatUtils chatRef={chatRef} setChat={setChat}/>: <div></div> }\r\n      <input\r\n      className=\"input-primary\"\r\n        placeholder=\"type your message\"\r\n        onChange={(e) => setChat(e.target.value)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\" && !e.shiftKey) {\r\n            if (chatRef.current !== null) {\r\n              e.preventDefault();\r\n              createChat({\r\n                variables: {\r\n                  createChatPrivateData: {\r\n                    roomId: roomId,\r\n                    content: chat,\r\n                    touserId: userId,\r\n                  }\r\n                },\r\n              }).catch((e) => {\r\n                return \"fuck\";\r\n              });\r\n              chatRef.current.value = \"\";\r\n              setChat(\"\");\r\n            }\r\n          }\r\n        }}\r\n        ref={chatRef}\r\n      />\r\n      <button\r\n      className=\"button-primary\"\r\n        onClick={(e) => {\r\n          if (chatRef.current !== null) {\r\n            e.preventDefault()\r\n            createChat({\r\n              variables: {\r\n                createChatPrivateData: {\r\n                  roomId: roomId,\r\n                  content: chat,\r\n                  touserId: userId,\r\n                }\r\n              },\r\n            }).catch();\r\n            chatRef.current.value = \"\";\r\n            setChat(\"\");\r\n          }\r\n        }}\r\n      >\r\n        Enter\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateChat;\r\n","interface ChatVariables {\r\n  id: number,\r\n  name: string,\r\n  createdAt: string,\r\n  image?: string,\r\n  content?: string\r\n}\r\n\r\nconst Avatar: React.FC<ChatVariables> = ({ id, name, createdAt, image, content }) => {\r\n  const userId = localStorage.getItem(\"userId\");\r\n  let color = \"max-w-xs  bg-white max-h-12 rounded-xl shadow-md flex items-center text-blue-400\";\r\n  let img = \"/img/1.jpg\";\r\n  if (id == userId as unknown as number) { \r\n    color = \"max-w-xs max-h-12 bg-white rounded-xl shadow-md flex items-center text-pink-400\"\r\n    img = \"/img/3.jpg\";\r\n  }\r\n  return (\r\n    <div className={color} >\r\n  <div className=\"flex-shrink-0\">\r\n    <img className=\"h-8 w-8\" src={img} alt=\"Profile\" />\r\n  </div>\r\n  <div>\r\n    <div className=\"font-medium text-black\">{name}</div>\r\n    <p >{content}</p>\r\n  </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Avatar from \"./avatar\";\r\nimport Errors from \"./errors\";\r\nimport Loading from \"./loading\";\r\nimport * as ChatPrivateTypes from \"./__generated__/chatPrivate\"\r\nconst CHAT_PRIVATE = gql`\r\nquery chatPrivate($chatPrivateId: Int, $chatPrivateUserid: Int) {\r\n  chatPrivate(id: $chatPrivateId, userid: $chatPrivateUserid) {\r\n    id\r\n    createdAt\r\n    content\r\n    author {\r\n      name\r\n      id\r\n    }\r\n    touser {\r\n      id\r\n      name\r\n    }\r\n  }\r\n}\r\n`\r\ninterface RoomProps {\r\n  roomId: number;\r\n  userId: number;\r\n}\r\nconst SCROLL_DIFF = 200;\r\nfunction atBottom(element: HTMLDivElement | null): boolean {\r\n  // If element is null, assume it is at bottom\r\n  if (element === null)\r\n    return true;\r\n  const top = element.scrollTop;\r\n  const height = element.clientHeight;\r\n  const scrollHeight = element.scrollHeight;\r\n\r\n  return scrollHeight - (top + height) < SCROLL_DIFF;\r\n}\r\n\r\n\r\nconst PrivateChatHistory: React.FC<RoomProps> = ({ roomId, userId }) => {\r\n  const myuserId = parseInt(localStorage.getItem(\"userId\") as string, 10)\r\n  const { data, loading, error } = useQuery<\r\n  ChatPrivateTypes.chatPrivate,\r\n  ChatPrivateTypes.chatPrivateVariables\r\n  >(CHAT_PRIVATE, {\r\n    variables: {\r\n      \"chatPrivateId\": myuserId,\r\n      \"chatPrivateUserid\": userId\r\n    },\r\n    pollInterval: 500,\r\n  });\r\n\r\n  const histRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Obtain three states to calculate whether page is at bottom\r\n  const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n  // Function to compute at bottom state, and set state accordingly\r\n  const computeBot = () => {\r\n    // Update state on scroll\r\n    setIsAtBottom(atBottom(histRef.current));\r\n  };\r\n\r\n  // Function to move to the end\r\n  const goToScrollEnd = () => {\r\n    if (histRef.current) {\r\n      histRef.current.scrollTop = histRef.current.scrollHeight - histRef.current.clientHeight;\r\n    }\r\n  };\r\n\r\n  // Scroll to the end if after history changes, it is still at the end\r\n  useEffect(() => {\r\n    if (atBottom(histRef.current))\r\n      goToScrollEnd();\r\n    computeBot();\r\n  });\r\n\r\n  if (loading) return <Loading />;\r\n  if (error || data === undefined) return <Errors />;\r\n  if (data) {\r\n    return (\r\n      <div \r\n        className=\"overflow-auto max-h-full\"\r\n        ref={histRef}\r\n        onScroll={() => {\r\n          computeBot();\r\n        }}\r\n      >\r\n        {data &&\r\n          data.chatPrivate.map((chat) => (\r\n            <Avatar \r\n              id={chat.author?.id as number} \r\n              key={chat.id} \r\n              name={chat.author?.name as string} \r\n              createdAt={chat.createdAt} \r\n              content={chat.content as string}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <Errors />;\r\n};\r\nexport default PrivateChatHistory;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport * as ChatByRoomIdTypes from \"./__generated__/ChatByRoomId\";\r\nimport Errors from \"./errors\";\r\nimport Loading from \"./loading\";\r\nimport Avatar from \"./avatar\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const CHAT_BY_ROOM_ID = gql`\r\n  query ChatByRoomId($chatByRoomIdId: Int) {\r\n    chatByRoomId(id: $chatByRoomIdId) {\r\n      id\r\n      createdAt\r\n      content\r\n      author {\r\n        name\r\n        id\r\n      }\r\n      room {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\ninterface RoomProps {\r\n  roomId: number;\r\n}\r\n\r\nconst SCROLL_DIFF = 200;\r\nfunction atBottom(element: HTMLDivElement | null): boolean {\r\n  // If element is null, assume it is at bottom\r\n  if (element === null)\r\n    return true;\r\n  const top = element.scrollTop;\r\n  const height = element.clientHeight;\r\n  const scrollHeight = element.scrollHeight;\r\n\r\n  return scrollHeight - (top + height) < SCROLL_DIFF;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst PublicChatHistory: React.FC<RoomProps> = ({ roomId }) => {\r\n  const { data, loading, error } = useQuery<\r\n    ChatByRoomIdTypes.ChatByRoomId,\r\n    ChatByRoomIdTypes.ChatByRoomIdVariables\r\n  >(CHAT_BY_ROOM_ID, {\r\n    variables: { chatByRoomIdId: roomId },\r\n    pollInterval: 500,\r\n  });\r\n  \r\n  // Reference to the scroll component\r\n  const histRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Obtain three states to calculate whether page is at bottom\r\n  const [isAtBottom, setIsAtBottom] = useState(true);\r\n\r\n  // Function to compute at bottom state, and set state accordingly\r\n  const computeBot = () => {\r\n    // Update state on scroll\r\n    setIsAtBottom(atBottom(histRef.current));\r\n  };\r\n\r\n  // Function to move to the end\r\n  const goToScrollEnd = () => {\r\n    if (histRef.current) {\r\n      histRef.current.scrollTop = histRef.current.scrollHeight - histRef.current.clientHeight;\r\n    }\r\n  };\r\n\r\n  // Scroll to the end if after history changes, it is still at the end\r\n  useEffect(() => {\r\n    if (atBottom(histRef.current))\r\n      goToScrollEnd();\r\n    computeBot();\r\n  });\r\n  \r\n\r\n\r\n  if (loading) return <Loading />;\r\n  if (error || data === undefined) return <Errors />;\r\n  if (data) {\r\n    return (\r\n      <div \r\n        className=\"overflow-auto max-h-full\"\r\n        ref={histRef}\r\n        onScroll={() => {\r\n          computeBot();\r\n        }}\r\n      >\r\n        ChatHistory here ID:{roomId}\r\n        {data &&\r\n          data.chatByRoomId.map((chat) => (\r\n            <Avatar \r\n              id={chat.author?.id as number} \r\n              key={chat.id} \r\n              name={chat.author?.name as string} \r\n              createdAt={chat.createdAt} \r\n              content={chat.content as string}\r\n            />\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <Errors />;\r\n};\r\nexport default PublicChatHistory;\r\n","import PrivateChatHistory from \"./privatechathistory\";\r\nimport PublicChatHistory from \"./publicchathistory\";\r\n\r\ninterface RoomProps {\r\n  roomId: number;\r\n  userId?: number;\r\n}\r\n\r\nconst ChatHistory: React.FC<RoomProps> = ({ roomId, userId }) => {\r\n  if (userId === 999999) {\r\n    return <PublicChatHistory roomId={roomId}/>\r\n  } else {\r\n    return (\r\n      <PrivateChatHistory roomId={roomId} userId={userId as number}/>\r\n    )\r\n  }\r\n};\r\n\r\nexport default ChatHistory;\r\n","import CreateChat from \"../components/createchat\"\r\nimport ChatHistory from \"../components/chathistory\"\r\nimport { useParams } from \"react-router-dom\";\r\n\r\ninterface UserIdProps {\r\n  _userId?: any;\r\n}\r\n\r\n//use route params for roomId.\r\nconst ChatRoom:React.FC<UserIdProps> = ({ _userId }) => {\r\n  const { roomId, userId } = useParams<{ roomId: string, userId: string }>()\r\n  return (\r\n    <div className=\"grid grid-rows-6 max-h-screen space-y-0\">\r\n      <div className=\"row-start-1 row-end-5\">\r\n      <ChatHistory roomId={parseInt(roomId,10)} userId={parseInt(userId,10)}/>\r\n      </div>\r\n      <div className=\"row-start-5 pb-8\">\r\n      <CreateChat roomId={parseInt(roomId,10)} userId={parseInt(userId,10)}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nimport * as DeleteRoomTypes from \"./__generated__/DeleteRoom\";\r\n\r\nconst DELETE_ROOM = gql`\r\n  mutation DeleteRoom($deleteRoomId: Int!) {\r\n    deleteRoom(id: $deleteRoomId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\ninterface RoomProps {\r\n  roomId?: any;\r\n}\r\n\r\nconst DeleteRoom: React.FC<RoomProps> = ({ roomId }) => {\r\n  const [deleteRoom] =\r\n    useMutation<\r\n      DeleteRoomTypes.DeleteRoom,\r\n      DeleteRoomTypes.DeleteRoomVariables\r\n    >(DELETE_ROOM);\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        deleteRoom({ variables: { deleteRoomId: roomId } })\r\n        .then(()=>{\r\n          window.location.href=\"/chat\";\r\n          localStorage.removeItem(\"roomId\");\r\n        }); \r\n      }}\r\n    >\r\n      Delete room {roomId}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DeleteRoom;\r\n","import { gql ,useQuery } from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteRoom from \"./deleteroom\";\r\nimport Errors from \"./errors\";\r\nimport Loading from \"./loading\";\r\nimport * as RoomListTypes from \"./__generated__/RoomList\";\r\n\r\nconst ROOM_LIST = gql`\r\n  query RoomList {\r\n    allRooms {\r\n      currentNumberofUsers\r\n      name\r\n      details\r\n      owner {\r\n        name\r\n      }\r\n      createdAt\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst RoomList: React.FC = () => {\r\n  const { data, error, loading } = useQuery<RoomListTypes.RoomList>(ROOM_LIST, {\r\n    pollInterval: 1000,\r\n  });\r\n  if (loading) return <Loading />;\r\n  if (error || data === undefined) return <Errors />;\r\n  if (data) {\r\n    return (\r\n      <div className=\"overflow-auto max-h-screen\">\r\n        {data.allRooms.map((room, i) => (\r\n          <Link className=\"max-w-sm\" to={(\"/chat/public/\" + room.id + \"/999999\") as unknown as string}>\r\n          <div key={i} className=\"py-8 px-8 max-w-sm bg-white rounded-xl shadow-md space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6\">\r\n            <img className=\"block mx-auto h-24 rounded-full sm:mx-0 sm:flex-shrink-0\" src=\"/img/4.jpg\" alt=\"Profile\" />\r\n            <div className=\"text-center space-y-2 sm:text-left\">\r\n              <div className=\"space-y-0.5\">\r\n                <p className=\"text-lg text-black font-semibold\">\r\n                  room name:{room.name} owner: {room.owner?.name}\r\n                </p>\r\n                <p className=\"text-gray-500 font-medium\">\r\n                  {room.details} \r\n                </p>\r\n                <p className=\"text-gray-500 font-medium\">\r\n                  {room.currentNumberofUsers} users inside\r\n                </p>\r\n              </div>\r\n              <DeleteRoom key={room.id} roomId={room.id} />\r\n            </div>\r\n          </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <Errors />;\r\n};\r\nexport default RoomList;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport * as UserPrivateRoomTypes from './__generated__/UserPrivateRoom'\r\nimport Errors from \"./errors\";\r\nimport { Link } from \"react-router-dom\";\r\ninterface UserIdProps {\r\n    userId?: any;\r\n  }\r\n\r\nconst USER_PRIVATE_ROOM = gql`\r\n  query UserPrivateRoom($userPrivateRoomId: Int) {\r\n  userPrivateRoom(id: $userPrivateRoomId) {\r\n    id\r\n  }\r\n}\r\n`\r\n\r\nconst PrivateRoom: React.FC<UserIdProps> = ({ userId }) => {\r\n  const {data} = useQuery<\r\n  UserPrivateRoomTypes.UserPrivateRoom,\r\n  UserPrivateRoomTypes.UserPrivateRoomVariables\r\n  >(USER_PRIVATE_ROOM,{\r\n      variables: { userPrivateRoomId: userId }\r\n  });\r\n  if (data && data.userPrivateRoom) {\r\n    return (\r\n        <Link to={(\"/chat/private/\"+ data.userPrivateRoom.id +\"/\"+ userId ) as unknown as string}>\r\n          <div className=\"px-4 py-1 text-sm text-purple-600 font-semibold rounded-full border border-purple-200 hover:text-white hover:bg-purple-600 hover:border-transparent focus:outline-none focus:ring-2 focus:ring-purple-600 focus:ring-offset-2\">Message</div>\r\n        </Link>\r\n      );\r\n  }\r\n  return <Errors />\r\n};\r\n\r\nexport default PrivateRoom;","import { gql, useQuery } from \"@apollo/client\";\r\nimport Loading from \"./loading\";\r\nimport Errors from \"./errors\";\r\nimport * as UserListTypes from \"./__generated__/UserList\";\r\nimport PrivateRoom from \"./privateroom\";\r\nconst USER_LIST = gql`\r\n  query UserList {\r\n    allUsers {\r\n      id\r\n      name\r\n      isOnline\r\n    }\r\n  }\r\n`;\r\n\r\nconst UserList: React.FC = () => {\r\n  const { data, loading, error } = useQuery<UserListTypes.UserList>(USER_LIST);\r\n\r\n  if (loading) return <Loading />;\r\n  if (error || data === undefined) return <Errors />;\r\n  if (data) {\r\n    return (\r\n      <div className=\"overflow-auto max-h-screen\">\r\n        {data.allUsers.map((user, i) => (\r\n          <div key={i} className=\"py-8 px-8 max-w-sm bg-white rounded-xl shadow-md space-y-2 sm:py-4 sm:flex sm:items-center sm:space-y-0 sm:space-x-6\">\r\n            <img className=\"block mx-auto h-24 rounded-full sm:mx-0 sm:flex-shrink-0\" src=\"/img/2.jpg\" alt=\"Profile\" />\r\n            <div className=\"text-center space-y-2 sm:text-left\">\r\n              <div className=\"space-y-0.5\">\r\n                <p className=\"text-lg text-black font-semibold\">\r\n                  {user.name}\r\n                </p>\r\n                <p className=\"text-gray-500 font-medium\">\r\n                  {user.isOnline ? <p>online!</p> : <p>offline</p>}\r\n                </p>\r\n              </div>\r\n              <PrivateRoom key={user.id} userId={user.id}/>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n  return <Errors />;\r\n};\r\n\r\n\r\n\r\n\r\nexport default UserList;\r\n","import { gql, useMutation } from \"@apollo/client\";\r\nimport { useRef, useState } from \"react\";\r\nimport * as CreateRoomTypes from \"./__generated__/CreateRoom\";\r\n\r\nconst CREATE_ROOM = gql`\r\n  mutation CreateRoom($createRoomData: RoomCreateInput!) {\r\n    createRoom(data: $createRoomData) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst CreateRoom: React.FC = () => {\r\n  const [createRoom] =\r\n    useMutation<\r\n      CreateRoomTypes.CreateRoom,\r\n      CreateRoomTypes.CreateRoomVariables\r\n    >(CREATE_ROOM);\r\n  const [name, setName] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const detailsRef = useRef<HTMLInputElement>(null);\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <p>Enter Room informations</p>\r\n      <input\r\n        className=\"py-2 text-sm text-white bg-white rounded-md pl-10 focus:outline-none focus:bg-pink-100 focus:text-gray-900\"\r\n        placeholder=\"name\"\r\n        type=\"text\"\r\n        onChange={(e) => setName(e.target.value)}\r\n        ref={nameRef}\r\n      />\r\n      <input\r\n      className=\"py-2 text-sm text-white bg-white rounded-md pl-10 focus:outline-none focus:bg-pink-100 focus:text-gray-900\"\r\n        placeholder=\"details\"\r\n        type=\"text\"\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        ref={detailsRef}\r\n      />\r\n      <button\r\n      className=\"button-primary\"\r\n        onClick={() => {\r\n          if (nameRef.current !== null) {\r\n            createRoom({\r\n              variables: { createRoomData: { name, details, public: true }},\r\n            }).catch();\r\n            nameRef.current.value = \"\";\r\n            if (detailsRef.current !== null) {\r\n              detailsRef.current.value = \"\";\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        CreateRoom\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateRoom;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport ChatRoom from \"./chatroom\";\r\nimport RoomList from \"../components/roomlist\";\r\nimport UserList from \"../components/userlist\";\r\nimport CreateRoom from \"../components/createroom\";\r\nimport { UserOrRoomVar } from \"../cache\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst USER_OR_ROOM = gql`\r\n  query UserOrRoom {\r\n    UserOrRoom @client\r\n  }\r\n`;\r\n\r\nconst Routes: React.FC = () => {\r\n  //const [UserorRoom, setUserorRoom] = useState(UserOrRoom);\r\n  const { data } = useQuery(USER_OR_ROOM);\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"grid grid-rows-5 grid-flow-col gap-4\">\r\n        <div className=\"row-span-5\">\r\n          create new room here~\r\n          <CreateRoom />\r\n        </div>\r\n        <div className=\"row-span-5 col-span-5\">\r\n          <Switch>\r\n            <Route path=\"/chat/public/:roomId/:userId\" exact>\r\n              <ChatRoom />\r\n            </Route>\r\n            <Route path=\"/chat/private/:roomId/:userId\" exact>\r\n              <ChatRoom />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n        <div className=\"col-span-1 row-span-5\">\r\n          <button\r\n          className=\"button-primary\"\r\n            onClick={(e) => {\r\n              UserOrRoomVar(false);\r\n              localStorage.setItem(\"place\", \"false\");\r\n            }}\r\n          >\r\n            click me to room list!\r\n          </button>\r\n          <button\r\n          className=\"button-primary\"\r\n            onClick={(e) => {\r\n              UserOrRoomVar(true);\r\n              localStorage.setItem(\"place\", \"true\");\r\n            }}\r\n          >\r\n            click me to user list!\r\n          </button>\r\n          <div className=\"overflow-auto max-h-full max-w-sm\">{data.UserOrRoom ? <UserList /> : <RoomList />}</div>\r\n        </div>\r\n        \r\n\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\nexport default Routes;\r\n","import { Fragment } from 'react'\r\nimport { Popover, Transition } from '@headlessui/react'\r\nimport { MenuIcon, XIcon } from '@heroicons/react/outline'\r\n\r\nconst navigation = [\r\n  { name: 'Product', href: '#' },\r\n  { name: 'Features', href: '#' },\r\n  { name: 'Marketplace', href: '#' },\r\n  { name: 'Company', href: '#' },\r\n]\r\n\r\nexport default function Welcome() {\r\n  return (\r\n    <div className=\"relative bg-white overflow-hidden\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <div className=\"relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32\">\r\n          <svg\r\n            className=\"hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-white transform translate-x-1/2\"\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 100 100\"\r\n            preserveAspectRatio=\"none\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <polygon points=\"50,0 100,0 50,100 0,100\" />\r\n          </svg>\r\n\r\n          <Popover>\r\n            {({ open }) => (\r\n              <>\r\n                <div className=\"relative pt-6 px-4 sm:px-6 lg:px-8\">\r\n                  <nav\r\n                    className=\"relative flex items-center justify-between sm:h-10 lg:justify-start\"\r\n                    aria-label=\"Global\"\r\n                  >\r\n                    <div className=\"flex items-center flex-grow flex-shrink-0 lg:flex-grow-0\">\r\n                      <div className=\"flex items-center justify-between w-full md:w-auto\">\r\n                        <a href=\"#\">\r\n                          <span className=\"sr-only\">Workflow</span>\r\n                          <img\r\n                            className=\"h-8 w-auto sm:h-10\"\r\n                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                          />\r\n                        </a>\r\n                        <div className=\"-mr-2 flex items-center md:hidden\">\r\n                          <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                            <span className=\"sr-only\">Open main menu</span>\r\n                            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </Popover.Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"hidden md:block md:ml-10 md:pr-4 md:space-x-8\">\r\n                      {navigation.map((item) => (\r\n                        <a key={item.name} href={item.href} className=\"font-medium text-gray-500 hover:text-gray-900\">\r\n                          {item.name}\r\n                        </a>\r\n                      ))}\r\n                      <a href=\"#\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n                        Log in\r\n                      </a>\r\n                    </div>\r\n                  </nav>\r\n                </div>\r\n\r\n                <Transition\r\n                  show={open}\r\n                  as={Fragment}\r\n                  enter=\"duration-150 ease-out\"\r\n                  enterFrom=\"opacity-0 scale-95\"\r\n                  enterTo=\"opacity-100 scale-100\"\r\n                  leave=\"duration-100 ease-in\"\r\n                  leaveFrom=\"opacity-100 scale-100\"\r\n                  leaveTo=\"opacity-0 scale-95\"\r\n                >\r\n                  <Popover.Panel\r\n                    focus\r\n                    static\r\n                    className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\r\n                  >\r\n                    <div className=\"rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden\">\r\n                      <div className=\"px-5 pt-4 flex items-center justify-between\">\r\n                        <div>\r\n                          <img\r\n                            className=\"h-8 w-auto\"\r\n                            src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                            alt=\"\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"-mr-2\">\r\n                          <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\r\n                            <span className=\"sr-only\">Close main menu</span>\r\n                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                          </Popover.Button>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n                        {navigation.map((item) => (\r\n                          <a\r\n                            key={item.name}\r\n                            href={item.href}\r\n                            className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50\"\r\n                          >\r\n                            {item.name}\r\n                          </a>\r\n                        ))}\r\n                      </div>\r\n                      <a\r\n                        href=\"#\"\r\n                        className=\"block w-full px-5 py-3 text-center font-medium text-indigo-600 bg-gray-50 hover:bg-gray-100\"\r\n                      >\r\n                        Log in\r\n                      </a>\r\n                    </div>\r\n                  </Popover.Panel>\r\n                </Transition>\r\n              </>\r\n            )}\r\n          </Popover>\r\n\r\n          <main className=\"mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28\">\r\n            <div className=\"sm:text-center lg:text-left\">\r\n              <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl\">\r\n                <span className=\"block xl:inline\">Data to enrich your</span>{' '}\r\n                <span className=\"block text-indigo-600 xl:inline\">online business</span>\r\n              </h1>\r\n              <p className=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\r\n                Anim aute id magna aliqua ad ad non deserunt sunt. Qui irure qui lorem cupidatat commodo. Elit sunt amet\r\n                fugiat veniam occaecat fugiat aliqua.\r\n              </p>\r\n              <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\r\n                <div className=\"rounded-md shadow\">\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 md:py-4 md:text-lg md:px-10\"\r\n                  >\r\n                    Get started\r\n                  </a>\r\n                </div>\r\n                <div className=\"mt-3 sm:mt-0 sm:ml-3\">\r\n                  <a\r\n                    href=\"#\"\r\n                    className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 md:py-4 md:text-lg md:px-10\"\r\n                  >\r\n                    Live demo\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n      <div className=\"lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2\">\r\n        <img\r\n          className=\"h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full\"\r\n          src=\"https://images.unsplash.com/photo-1551434678-e076c223a692?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2850&q=80\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\r\nimport Logout from \"../components/logout\";\r\nimport Develop from \"./develop\";\r\nimport Profile from \"./profile\";\r\nimport Routes from \"./routes\";\r\nimport Welcome from \"./welcome\";\r\n\r\nconst Main: React.FC = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"max-h-screen static\">\r\n\r\n        <div className=\"nav-bar flex\">\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/\">main</Link>\r\n          </div>\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/profile\">profile</Link>\r\n          </div>\r\n\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/chat\">chat</Link>\r\n          </div>\r\n\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/invitations\">invitations</Link>\r\n          </div>\r\n\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/search\">search</Link>\r\n          </div>\r\n\r\n          <div className=\"nav-item\">\r\n            <Link to=\"/develop\">develop</Link>\r\n          </div>\r\n\r\n          <div className=\"nav-item\">\r\n            <Logout />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Welcome />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/chat\">\r\n              <Routes />\r\n            </Route>\r\n            <Route path=\"/invitations\">\r\n              <div>invitations</div>\r\n            </Route>\r\n            <Route path=\"/search\">\r\n              <div>search</div>\r\n            </Route>\r\n            <Route path=\"/develop\">\r\n              <Develop />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { gql, useQuery } from '@apollo/client';\r\nimport Login from './pages/login';\r\nimport Main from './pages/main';\r\nexport const typeDefs = gql`\r\n  extend type Query {\r\n    isLoggedIn: Boolean!\r\n    UserOrRoom: Boolean!\r\n  }\r\n`;\r\n\r\nconst IS_LOGGED_IN = gql`\r\n  query IsUserLoggedIn {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nexport default function IsLoggedIn() {\r\n  const { data } = useQuery(IS_LOGGED_IN);\r\n  return data.isLoggedIn \r\n  ? <Main /> \r\n  : <div><Login /></div>;\r\n}\r\n\r\n","import ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport {\r\n  ApolloClient,\r\n  NormalizedCacheObject,\r\n  ApolloProvider,\r\n  split,\r\n  HttpLink,\r\n} from \"@apollo/client\";\r\nimport { cache } from \"./cache\";\r\nimport { typeDefs } from \"./localauth\";\r\nimport IsLoggedIn from \"./localauth\";\r\nimport { getMainDefinition } from \"@apollo/client/utilities\";\r\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\r\n\r\nconst httpLink = new HttpLink({\r\n  uri: \"http://localhost:4000/graphql\",\r\n  headers: {\r\n    authorization: localStorage.getItem(\"token\") || \"\",\r\n    \"client-name\": \"Space Explorer [web]\",\r\n    \"client-version\": \"1.0.0\",\r\n  },\r\n});\r\n\r\nconst wsLink = new WebSocketLink({\r\n  uri: \"ws://localhost:4000/subscriptions\",\r\n  options: {\r\n    reconnect: true,\r\n    connectionParams: { authorization: localStorage.getItem(\"token\") || \"\" },\r\n  },\r\n});\r\n\r\n// The split function takes three parameters:\r\n//\r\n// * A function that's called for each operation to execute\r\n// * The Link to use for an operation if the function returns a \"truthy\" value\r\n// * The Link to use for an operation if the function returns a \"falsy\" value\r\nconst splitLink = split(\r\n  ({ query }) => {\r\n    const definition = getMainDefinition(query);\r\n    return (\r\n      definition.kind === \"OperationDefinition\" &&\r\n      definition.operation === \"subscription\"\r\n    );\r\n  },\r\n  wsLink,\r\n  httpLink\r\n);\r\n\r\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  headers: {\r\n    authorization: localStorage.getItem(\"token\") || \"\",\r\n    \"client-name\": \"Space Explorer [web]\",\r\n    \"client-version\": \"1.0.0\",\r\n  },\r\n  cache,\r\n  uri: \"http://localhost:4000/graphql\",\r\n  typeDefs: typeDefs,\r\n  link: splitLink,\r\n});\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <IsLoggedIn />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}